import React from "react"; // ğŸ”¹ Importa o React
import { useState } from "react"; // ğŸ”¹ Hook para gerenciar estados
import PropTypes from "prop-types"; // ğŸ”¹ Biblioteca para validar props

// ğŸ”¹ Componente do formulÃ¡rio que recebe a funÃ§Ã£o `onUsuarioAdicionado` como prop
function Formulario({ onUsuarioAdicionado }) {
  // ğŸ”¹ Estados locais para armazenar os valores digitados nos inputs
  const [nome, setNome] = useState("");
  const [email, setEmail] = useState("");

  // ğŸ”¹ FunÃ§Ã£o chamada quando o formulÃ¡rio Ã© enviado
  function handleSubmit(e) {
    e.preventDefault(); // ğŸ”¹ Evita o recarregamento da pÃ¡gina

    // ğŸ”¹ Envia os dados para o backend via API
    fetch("https://ribacki-react.onrender.com/usuarios", {
      method: "POST", // ğŸ”¹ MÃ©todo HTTP POST para enviar dados
      headers: { "Content-Type": "application/json" }, // ğŸ”¹ Define o tipo do corpo da requisiÃ§Ã£o
      body: JSON.stringify({ nome, email }), // ğŸ”¹ Converte os valores para JSON antes de enviar
    })
      .then((res) => res.json()) // ğŸ”¹ Converte a resposta para JSON
      .then((data) => {
        setNome(""); // ğŸ”¹ Limpa o campo "nome"
        setEmail(""); // ğŸ”¹ Limpa o campo "email"
        if (onUsuarioAdicionado) onUsuarioAdicionado(data); // ğŸ”¹ Atualiza a lista no App
      })
      .catch((error) => console.error("Erro ao cadastrar usuÃ¡rio:", error)); // ğŸ”¹ Exibe erro no console
  }

  return (
    <form onSubmit={handleSubmit}>
      <h2>Cadastrar UsuÃ¡rio</h2>
      {/* ğŸ”¹ Campo de entrada para o nome */}
      <input
        type="text"
        placeholder="Nome"
        value={nome}
        onChange={(e) => setNome(e.target.value)}
        required
      />
      {/* ğŸ”¹ Campo de entrada para o email */}
      <input
        type="email"
        placeholder="Email"
        value={email}
        onChange={(e) => setEmail(e.target.value)}
        required
      />
      {/* ğŸ”¹ BotÃ£o para cadastrar */}
      <button type="submit">Cadastrar</button>
    </form>
  );
}

// ğŸ”¹ ValidaÃ§Ã£o das props recebidas pelo componente
Formulario.propTypes = {
  onUsuarioAdicionado: PropTypes.func.isRequired, // ğŸ”¹ Garante que Ã© uma funÃ§Ã£o obrigatÃ³ria
};

export default Formulario;
